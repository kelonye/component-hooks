// Generated by CoffeeScript 1.6.2
var Builder, coffee, component, fs, jade, mkdir, path, styl, utils, write;

fs = require('fs');

path = require('path');

component = require('component');

utils = component.utils;

jade = require('./jade');

styl = require('./styl');

coffee = require('./coffeec');

mkdir = require('component/node_modules/mkdirp');

Builder = require('component/node_modules/component-builder');

write = fs.writeFileSync;

Builder.prototype.buildAliases = require('./utils').buildAliases;

module.exports = function(req, rez, next) {
  var builder, conf, cssPath, cwd, jsPath, _base, _base1, _base2, _ref, _ref1, _ref2, _ref3;

  if (req == null) {
    req = {};
  }
  if ((_ref = req.program) == null) {
    req.program = {};
  }
  if ((_ref1 = (_base = req.program).out) == null) {
    _base.out = 'public';
  }
  if ((_ref2 = (_base1 = req.program).name) == null) {
    _base1.name = 'public';
  }
  mkdir.sync(req.program.out);
  cwd = process.cwd();
  builder = new Builder(cwd);
  conf = require(cwd + '/component.json');
  builder.addLookup(conf.paths);
  builder.copyAssetsTo(req.program.out);
  if (req.program.dev) {
    builder.prefixUrls('./');
    builder.development();
    builder.addSourceURLs();
  }
  builder.use(styl);
  builder.use(jade);
  builder.use(coffee);
  if ((_ref3 = (_base2 = req.program).name) == null) {
    _base2.name = 'build';
  }
  jsPath = path.join(req.program.out, req.program.name + '.js');
  cssPath = path.join(req.program.out, req.program.name + '.css');
  return builder.build(function(err, res) {
    if (err) {
      utils.fatal(err.message);
    }
    write(jsPath, res.require + res.js);
    write(cssPath, res.css.trim());
    return next();
  });
};
