// Generated by CoffeeScript 1.6.2
var Batch, Style, addConfProperty, fs, path;

fs = require('fs');

path = require('path');

Style = require('styl');

Batch = require('batch');

addConfProperty = require('./utils').addConfProperty;

module.exports = function(builder) {
  builder.hook('before styles', function(pkg, fn) {
    var batch, styles;

    styles = pkg.config.styles;
    if (!styles) {
      return fn();
    }
    batch = new Batch();
    styles.forEach(function(file) {
      return batch.push(function(done) {
        var css, cssfile, styl, style, vendors;

        cssfile = pkg.path(file);
        styl = fs.readFileSync(cssfile, 'utf8');
        vendors = 'o,ms,moz,webkit'.split(',').map(function(v) {
          return '-' + v + '-';
        });
        style = new Style(styl);
        style.vendors(vendors);
        css = style.toString();
        pkg.addFile('styles', cssfile, css);
        return done();
      });
    });
    return batch.end(fn);
  });
  return builder.hook('before styles', function(pkg, fn) {
    var batch, styles;

    styles = pkg.config.styl;
    if (!styles) {
      return fn();
    }
    batch = new Batch();
    styles.forEach(function(file) {
      return batch.push(function(done) {
        var css, cssfile, opts, styl, style, stylfile, vendors;

        stylfile = pkg.path(file) + '.styl';
        cssfile = "" + file + ".css";
        styl = fs.readFileSync(stylfile, 'utf8');
        vendors = 'o,ms,moz,webkit'.split(',').map(function(v) {
          return '-' + v + '-';
        });
        opts = {
          whitespace: true
        };
        style = new Style(styl, opts);
        style.vendors(vendors);
        css = style.toString();
        pkg.addFile('styles', cssfile, css);
        return done();
      });
    });
    return batch.end(fn);
  });
};
